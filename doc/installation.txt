
FAE Installation: Library dependencies and pathnames

---------------------
System-wide libraries
---------------------

* Python 2.5.2 or later
* Apache 2.2.3 or later
* mod_python 3.3.1
* libxml2 2.7.2 or later
* libxslt 1.1.24 or later
* Objective Caml 3.09 or later

* Django 1.0.2 or later
* psycopg2 2.0.7 or later
* pg_config (installed automatically as dependency of psycopg2?)
* docutils (needed by Django's built-in admin app)
* lxml 2.1.2 or later

------------------------------
Application-specific libraries
------------------------------

* django-registration

* wamt (copy binary from faedev)

* wget

1. Get the wget source files from Subversion with:
   $ svn checkout svn://www.dres.uiuc.edu/wget/trunk wget

2. CD to wget and build our version with these commands:
   $ ./configure
   $ make

3. Copy wget executable from src subdirectory to bin.

---------
Pathnames
---------

FAE will utilize the following directory structure:

The Django project files will be installed in:
    /services/<app-id>/lib/project

where <app-id> is one of faedev, faetest, faedata
(these names match those of their respective databases on fileserv)

Any other Django-specific third-party apps (e.g., registration)
will also be installed in /services/<app-id>/lib/

The entire structure for FAE will look like the following (using the
staging installation (faetest) as an example):

/services/faetest/bin       binaries such as wamt and wget

/services/faetest/html      document root for apache (static media files)

/services/faetest/lib       Python packages (e.g., project, registration)

/services/faetest/logs      log files

/services/faetest/reports   user data

/services/faetest/sites     downloaded files (analyzed then deleted)

-----------------------------
Additional installation steps
-----------------------------

* Build wget and copy executable file to /services/<app-id>/bin

* Copy wamt executable using rsync to /services/<app-id>/bin

* Create subdirectories under /services/<app-id>/reports
  (guest, user, xml) and chown guest and user to apache.

* Create subdirectories under /services/<app-id>/html
	(media/css, media/images, media/js)

* Create symbolic link named 'admin' in /services/<app-id>/html/media
  that links to Django's contrib/admin/media directory.

* Install the django-registration package in /services/<app-id>/lib
  in registration subdirectory.

* Use svn export to create project directory in /services/<app-id>/lib

* Run the project/fae/scripts/copy_files script to populate html/media
  and reports/xml subdirectories.

* If needed, run 'python manage.py syncdb' to create database tables.

* If needed, run 'python manage.py loaddata organization' to populate
  fae_organization table.

* Add crontab entry to call collect_stats.py and purge_reports.py
